<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <title>Document</title>
</head>
<body>
    <h1>회원가입</h1>
    <form name="signup-form">
        <input type="text" name="name" placeholder="이름"/><br/>
        <input type="text" name="userid" placeholder="아이디"><br/>
        <input type="password" name="pw" placeholder="비밀번호"><br/>
        <button type="button" onclick="userSignUp()">회원가입</button>
    </form>
    <br/>
    <h1>로그인</h1>
    <form name="signin-form">
        <input type="text" name="userid" placeholder="아이디"><br/>
        <input type="password" name="pw" placeholder="비밀번호"><br/>
        <button type="button" onclick="userSignin()">로그인</button>
    </form>
    <a href="/new">게시글 작성</a>
</body>
<script>
    async function userSignUp(){
        const signUpForm = document.forms["signup-form"];
        try {
            const data = {
                user_name:signUpForm.name.value,
                login_id:signUpForm.userid.value,
                login_pw:signUpForm.pw.value,
            }
            const res = await axios({
                method:"post",
                url:"/signup",
                data,
            })
            if (!res.data.result){
                alert(res.data.message)
                return;
            } else{
                alert(res.data.message)
            }
        } catch (error) {
            console.log(error);
        }
    }

    async function userSignin(){
            const signInForm = document.forms["signin-form"];
            try {
                const data = {
                    login_id:signInForm.userid.value,
                    login_pw:signInForm.pw.value,
                }
                const res = await axios({
                    method:"post",
                    url:"/signin",
                    data,
                })
                if (!res.data.result){
                    alert(res.data.message);
                    return;
                } else{
                    alert(res.data.message)
                }
            } catch (error) {
                console.log(error);
            }
        }
</script>
<script>
    const socket1 = io();
    const socket2 = io();
    // 네임 스페이스 '/'의 경우에는 생략가능 (링크 개념이라)
    // 이렇게 소켓을 여러개 가져와 쓸 수도 있는 것 같다
    console.log("socket1",socket1);
    console.log("socket2",socket2);
    socket1.emit('userLog')
</script>
</html>