<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/public/js/socket/system_socket.js" defer></script>
    <link rel="stylesheet" href="/public/css/chat/chatRoom.css">
</head>
<body>
    <body>
        <div id="chat-box">
            <div id="chat-header">채팅방</div>
            <ul id="message-list"></ul>
            <div id="user-input">
                <input type="text" id="message-input" placeholder="메시지 입력">
                <button id="send-button" onclick="msgSend()">보내기</button>
            </div>
        </div>
    </body>
</body>
<script>
    const user_id = '<%= user_id %>'
    const nickname = '<%= nickname %>'
    const room_id = '<%= room_id %>'
    const category = '<%= category %>'
    const socket = io ('/');
    let memberInfoList;
</script>
<script>
    (async () => {
        await memberLoad()
        await chatMsgLoad();
    })()

    async function memberLoad(){
        const member_list = await axios({
            method: 'post',
            url: '/member/load',
            data: {
                room_id
            }
        })
        memberInfoList = member_list.data.memberInfoList
        if (!member_list.data.result){
            alert('사이트 로직 오류');
            return;
        }
    }

    function nicknameSearch(user_id){
        const member = memberInfoList.find((e) => e.user_id === user_id);
        return member.nickname;
    }


    async function chatMsgLoad(){
        const msgs = await axios({
        method: 'post',
        url: '/msg/load',
        data: {
            room_id,
        }
        })
        const {msg_list} = msgs.data
        for (let i = 0; i < msg_list.length; i++){
            const {user_id:msg_user_id,content} = msg_list[i]
            const flag = (msg_user_id === user_id)
            const nickname = nicknameSearch(msg_user_id);
            msgLiAdd(nickname,content,flag)
        }
        const messageList = document.getElementById('message-list');
        messageList.scrollTop = messageList.scrollHeight;
        // 스크롤을 아래로 이동하여 최신 메시지를 보여줍니다.
    }

    function msgLiAdd(nickname,content,isMine){
        const messageList = document.getElementById('message-list');
        const li = document.createElement('li');
        li.className = 'message';
        // const profileImg = document.createElement('img');
        // profileImg.src = 'profile.jpg'; // 프로필 이미지 경로
        // profileImg.className = 'profile-img';
        // li.appendChild(profileImg);
        const userInfo = document.createElement('div');
        const messageContent = document.createElement('div');
        userInfo.className = 'user-info';
        userInfo.textContent = nickname;
        if (isMine) {
            // profileImg.style.marginRight = '0';
            // profileImg.style.marginLeft = '10px';
            messageContent.style.textAlign = 'right';
            messageContent.style.backgroundColor = '#007bff';
            messageContent.style.color = '#fff';
            li.style.float = 'right';
            li.style.alignItems = 'flex-end';
            userInfo.className = 'user-info my-msg';
        }
        li.appendChild(userInfo);
        messageContent.className = 'message-content';
        messageContent.textContent = content;
        li.appendChild(messageContent);
        messageList.appendChild(li);
    }

    async function msgSend(){
        const msg = document.getElementById('message-input');
        if(!msg.value){
            return;
        }
        const msg_send = await axios ({
            method: 'post',
            url: '/msg/send',
            data: {
                user_id,
                room_id,
                nickname,
                content: msg.value,
            }
        })
        msg.value = ''
        socket.emit('msg_send',msg_send.data);
    }

</script>
</html>